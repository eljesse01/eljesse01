- hosts: nginx   
  become: true
  tasks:
    - name: Install nginx web server
      yum: name=nginx state=installed update_cache=true

    - name: Start Nginx
      service: name=nginx enabled=yes state=started

    - name: Copy nginx configuration for wordpress
      template: src=default.conf dest=/etc/nginx/conf.d/default.conf
      # notify: restart nginx
    - name: restart nginx
      service: name=nginx state=restarted enabled=yes 


    # - name: insert firewalld rule for nginx
    #   firewalld: port=80/tcp permanent=true state=enabled immediate=yes
    #   ignore_errors: yes

    # - name: insert firewalld rule for port 80 
    #   firewalld: port=80/tcp permanent=true state=enabled immediate=yes 
    #   ignore_errors: yes 

    - name: http service state
      service: name=nginx state=started enabled=yes

    - name: Install PHP Remi Repository
      yum: name=http://rpms.remirepo.net/enterprise/remi-release-7.rpm update_cache=yes state=latest
    
    - name: Installing php and extensions
      yum:
        enablerepo: "remi,remi-php70"
        name:
          - php
          - php-common
          - php-cli
          - php-gd
          - php-curl 
          - php-mysqlnd
          - php-fpm
          - php-mysqli
          - php-mbstring
          - php-xml 
          - php-xmlrpc 
          - php-soap
          - php-intl
          - php-zip
          - php-opcache 
          - php-pecl-apcu
          - php-pear 
          - php-pdo 
          - php-mysqlnd 
          - php-pgsql 
          - php-pecl-mongodb 
          - php-pecl-redis
          - php-pecl-memcache 
          - php-pecl-memcached
          - php-gd
          - php-mcrypt
        state: latest

    - name: make nginx owner of web directory
      file:
        path: /usr/share/nginx/html
        recurse: yes
        owner: nginx
        group: nginx

    - name: change php user to nginx
      lineinfile:
        path: /etc/php-fpm.d/www.conf
        regexp: '^{{ item.apache }}'
        line: '{{ item.nginx }}'
      loop:
      - user:
        apache: "user ="
        nginx: "user = nginx"
      - group: 
        apache: "group ="
        nginx: "group = nginx"
      notify: restart php

    - name: listen on unix socket not tcp/ip
      lineinfile:
        path: /etc/php-fpm.d/www.conf
        regexp: "listen ="
        line: "listen = /var/run/php-fpm/php-fpm.sock"
        state: present
      notify: restart php

    - name: listen on unix socket not tcp/ip
      lineinfile:
        path: /etc/php-fpm.d/www.conf
        regexp: ";listen.owner = nobody"
        line: "listen.owner = nginx"
        state: present
      notify: restart php

    - name: listen on unix socket not tcp/ip
      lineinfile:
        path: /etc/php-fpm.d/www.conf
        regexp: ";listen.group = nobody"
        line: "listen.group = nginx"
        state: present
      notify: restart php   

    - name: create php test page
      copy:
        dest: /usr/share/nginx/html/index.php
        content: "<?php phpinfo(); ?>"
        owner: nginx
        group: nginx
      notify:
      - restart nginx
      - restart php



    # - name: Disable default pool
    #   command: mv /etc/php-fpm.d/www.conf /etc/php-fpm.d/www.disabled creates=/etc/php-fpm.d/www.disabled
      

    # - name: Copy php-fpm configuration
    #   template: src=wordpress.conf dest=/etc/php-fpm.d/www.conf


    - name: restart php-fpm
      service: name=php-fpm state=restarted enabled=yes

    - name: restart nginx
      service: name=nginx state=restarted enabled=yes

    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/usr/share/nginx/html/"
        remote_src: yes

    - name: Set ownership
      file:
        path: "/usr/share/nginx/html/"
        state: directory
        recurse: yes
        owner: nginx
        group: nginx
 

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/share/nginx/html/
        state: directory
        recurse: yes
        mode: '777'
 
    - name: Copy sample config file
      command: mv /usr/share/nginx/html/wordpress/wp-config-sample.php /usr/share/nginx/html/wordpress/wp-config.php creates=/usr/share/nginx/html/wordpress/wp-config.php
      become: yes
 
    - name: Update WordPress config file
      lineinfile:
        path: "/usr/share/nginx/html/wordpress/wp-config.php"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {'regexp': "define\\( 'DB_NAME', '(.)+' \\);", 'line': "define( 'DB_NAME', 'wpdb' );"}
        - {'regexp': "define\\( 'DB_USER', '(.)+' \\);", 'line': "define( 'DB_USER', 'wpuser' );"}
        - {'regexp': "define\\( 'DB_PASSWORD', '(.)+' \\);", 'line': "define( 'DB_PASSWORD', 'password' );"}
       
  handlers:
    - name: restart php-fpm
      service: name=php-fpm state=restarted

    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: restart php
      service:
        name: php-fpm
        state: restarted